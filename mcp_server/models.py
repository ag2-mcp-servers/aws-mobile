# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T12:43:17+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Dict, List, Optional

from pydantic import BaseModel, Field, RootModel


class AttributeKey(RootModel[str]):
    root: str = Field(..., description=' Key part of key-value attribute pairs. ')


class AttributeValue(RootModel[str]):
    root: str = Field(..., description=' Value part of key-value attribute pairs. ')


class Attributes(RootModel[Optional[Dict[str, AttributeValue]]]):
    root: Optional[Dict[str, AttributeValue]] = None


class Boolean(RootModel[bool]):
    root: bool


class BundleDescription(RootModel[str]):
    root: str = Field(..., description=' Description of the download bundle. ')


class BundleId(RootModel[str]):
    root: str = Field(..., description=' Unique bundle identifier. ')


class BundleTitle(RootModel[str]):
    root: str = Field(..., description=' Title of the download bundle. ')


class BundleVersion(RootModel[str]):
    root: str = Field(..., description=' Version of the download bundle. ')


class ConsoleUrl(RootModel[str]):
    root: str


class Contents(RootModel[str]):
    root: str = Field(..., description=' Binary file data. ')


class CreateProjectRequest(BaseModel):
    contents: Optional[Contents] = None


class Date(RootModel[datetime]):
    root: datetime


class DeleteProjectRequest(BaseModel):
    pass


class DescribeBundleRequest(BaseModel):
    pass


class DescribeProjectRequest(BaseModel):
    pass


class DownloadUrl(RootModel[str]):
    root: str = Field(..., description=' The download Url. ')


class ErrorMessage(RootModel[str]):
    root: str = Field(..., description=' The Exception Error Message. ')


class ExportBundleRequest(BaseModel):
    pass


class ExportBundleResult(BaseModel):
    downloadUrl: Optional[DownloadUrl] = None


class ExportProjectRequest(BaseModel):
    pass


class Feature(RootModel[str]):
    root: str = Field(
        ...,
        description=' Identifies which feature in AWS Mobile Hub is associated with this AWS resource. ',
    )


class IconUrl(RootModel[str]):
    root: str = Field(..., description=' Icon for the download bundle. ')


class InternalFailureException(BaseModel):
    message: Optional[ErrorMessage] = None


class LimitExceededException(BaseModel):
    message: Optional[ErrorMessage] = None


class ListBundlesRequest(BaseModel):
    pass


class ListProjectsRequest(BaseModel):
    pass


class MaxResults(RootModel[int]):
    root: int = Field(
        ..., description=' Maximum number of records to list in a single response. '
    )


class NextToken(RootModel[str]):
    root: str = Field(
        ...,
        description=' Pagination token. Set to null to start listing records from start. If non-null pagination token is returned in a result, then pass its value in here in another request to list more entries. ',
    )


class NotFoundException(BaseModel):
    message: Optional[ErrorMessage] = None


class Platform(Enum):
    OSX = 'OSX'
    WINDOWS = 'WINDOWS'
    LINUX = 'LINUX'
    OBJC = 'OBJC'
    SWIFT = 'SWIFT'
    ANDROID = 'ANDROID'
    JAVASCRIPT = 'JAVASCRIPT'


class Platforms(RootModel[List[Platform]]):
    root: List[Platform] = Field(
        ..., description=' Developer desktop or mobile app or website platforms. '
    )


class ProjectId(RootModel[str]):
    root: str = Field(..., description=' Unique project identifier. ')


class ProjectName(RootModel[str]):
    root: str = Field(..., description=' Name of the project. ')


class ProjectRegion(RootModel[str]):
    root: str = Field(
        ...,
        description=' Default region to use for AWS resource creation in the AWS Mobile Hub project. ',
    )


class ProjectState(Enum):
    NORMAL = 'NORMAL'
    SYNCING = 'SYNCING'
    IMPORTING = 'IMPORTING'


class ProjectSummary(BaseModel):
    name: Optional[ProjectName] = None
    projectId: Optional[ProjectId] = None


class ResourceArn(RootModel[str]):
    root: str = Field(
        ...,
        description=' AWS resource name which uniquely identifies the resource in AWS systems. ',
    )


class ResourceName(RootModel[str]):
    root: str = Field(
        ...,
        description=' Name of the AWS resource (e.g., for an Amazon S3 bucket this is the name of the bucket). ',
    )


class ResourceType(RootModel[str]):
    root: str = Field(
        ...,
        description=' Simplified name for type of AWS resource (e.g., bucket is an Amazon S3 bucket). ',
    )


class ServiceUnavailableException(BaseModel):
    message: Optional[ErrorMessage] = None


class ShareUrl(RootModel[str]):
    root: str = Field(
        ...,
        description=' URL which can be shared to allow other AWS users to create their own project in AWS Mobile Hub with the same configuration as the specified project. This URL pertains to a snapshot in time of the project configuration that is created when this API is called. If you want to share additional changes to your project configuration, then you will need to create and share a new snapshot by calling this method again. ',
    )


class SnapshotId(RootModel[str]):
    root: str = Field(
        ...,
        description=' Unique identifier for the exported snapshot of the project configuration. This snapshot identifier is included in the share URL. ',
    )


class TooManyRequestsException(BaseModel):
    message: Optional[ErrorMessage] = None


class UnauthorizedException(BaseModel):
    message: Optional[ErrorMessage] = None


class UpdateProjectRequest(BaseModel):
    contents: Optional[Contents] = None


class ProjectsPostRequest(BaseModel):
    contents: Optional[str] = Field(None, description=' Binary file data. ')


class UpdateProjectIdPostRequest(BaseModel):
    contents: Optional[str] = Field(None, description=' Binary file data. ')


class AccountActionRequiredException(BaseModel):
    message: Optional[ErrorMessage] = None


class BadRequestException(BaseModel):
    message: Optional[ErrorMessage] = None


class BundleDetails(BaseModel):
    availablePlatforms: Optional[Platforms] = None
    bundleId: Optional[BundleId] = None
    description: Optional[BundleDescription] = None
    iconUrl: Optional[IconUrl] = None
    title: Optional[BundleTitle] = None
    version: Optional[BundleVersion] = None


class BundleList(RootModel[List[BundleDetails]]):
    root: List[BundleDetails] = Field(..., description=' A list of bundles. ')


class DescribeBundleResult(BaseModel):
    details: Optional[BundleDetails] = None


class ExportProjectResult(BaseModel):
    downloadUrl: Optional[DownloadUrl] = None
    shareUrl: Optional[ShareUrl] = None
    snapshotId: Optional[SnapshotId] = None


class ListBundlesResult(BaseModel):
    bundleList: Optional[BundleList] = None
    nextToken: Optional[NextToken] = None


class ProjectSummaries(RootModel[List[ProjectSummary]]):
    root: List[ProjectSummary] = Field(..., description=' List of projects. ')


class Resource(BaseModel):
    arn: Optional[ResourceArn] = None
    attributes: Optional[Attributes] = None
    feature: Optional[Feature] = None
    name: Optional[ResourceName] = None
    type: Optional[ResourceType] = None


class Resources(RootModel[List[Resource]]):
    root: List[Resource] = Field(
        ..., description=' List of AWS resources associated with a project. '
    )


class DeleteProjectResult(BaseModel):
    deletedResources: Optional[Resources] = None
    orphanedResources: Optional[Resources] = None


class ListProjectsResult(BaseModel):
    nextToken: Optional[NextToken] = None
    projects: Optional[ProjectSummaries] = None


class ProjectDetails(BaseModel):
    consoleUrl: Optional[ConsoleUrl] = None
    createdDate: Optional[Date] = None
    lastUpdatedDate: Optional[Date] = None
    name: Optional[ProjectName] = None
    projectId: Optional[ProjectId] = None
    region: Optional[ProjectRegion] = None
    resources: Optional[Resources] = None
    state: Optional[ProjectState] = None


class UpdateProjectResult(BaseModel):
    details: Optional[ProjectDetails] = None


class CreateProjectResult(BaseModel):
    details: Optional[ProjectDetails] = None


class DescribeProjectResult(BaseModel):
    details: Optional[ProjectDetails] = None
